
public class Problem12 {

	/**
	 * @param args
	 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
	 */
	public static void main(String[] args) {
		int i = 11420;
		long maxCount =0;
		while (true){
			long sum = calculateTriangle(i);
			int count = factorCount(sum);
			if (count > maxCount){
				maxCount = count;
			}
			System.out.println(i + " : " + sum + " , " + count + ", MaxCount : " + maxCount);

			if (count > 500){
				break;
			}
			else{
				i = i+1;
			}
			
		}
		
	}

	private static int factorCount(long sum) {
		int count = 0;
		for (long j = 1 ; j <= sum ; j++){
			if (sum % j == 0){
				count = count + 1;
			}
		}
		return count;
	}

	private static long calculateTriangle(long i) {
		long sum = 0L;
		for (long j = 1 ; j <= i ; j++){
			sum = sum + j;
		}
		return sum;
	}

}
